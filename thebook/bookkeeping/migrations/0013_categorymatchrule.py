# Generated by Django 5.2 on 2025-05-15 12:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("bookkeeping", "0012_document_document_date"),
    ]

    operations = [
        migrations.CreateModel(
            name="CategoryMatchRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("priority", models.IntegerField(unique=True)),
                ("pattern", models.CharField(max_length=512)),
                (
                    "value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "comparison_function",
                    models.CharField(
                        blank=True,
                        choices=[("EQ", "EQ"), ("LTE", "LTE"), ("GTE", "GTE")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("tags", models.CharField(blank=True, max_length=512, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bookkeeping.category",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(
                                ("value__isnull", True),
                                ("comparison_function__isnull", True),
                            ),
                            models.Q(
                                ("value__isnull", False),
                                ("comparison_function__isnull", False),
                            ),
                            _connector="OR",
                        ),
                        name="value_and_comparison_function_are_required_together",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            ("comparison_function__isnull", True),
                            models.Q(
                                ("comparison_function__isnull", False),
                                ("comparison_function__in", ["EQ", "LTE", "GTE"]),
                            ),
                            _connector="OR",
                        ),
                        name="valid_comparison_function",
                    ),
                ],
            },
        ),
    ]
